#!/usr/bin/env python3
import multiprocessing as mp
import os

from libinput import get_absinfo, get_touchpad_device, touchpad_evdev

if os.environ["XDG_SESSION_TYPE"] == "wayland":
    os.environ["SDL_VIDEODRIVER"] = "wayland"  # wayland fix
os.environ["PYGAME_HIDE_SUPPORT_PROMPT"] = "1"

import pygame

SCALE = 6
DEVICE = get_touchpad_device()
FPS = 60


absinfo = get_absinfo(DEVICE)

MAX_X = absinfo[0][1] // SCALE
MAX_Y = absinfo[1][1] // SCALE
WINDOW = MAX_X, MAX_Y

# evdev process setup
pos = mp.Array("i", [-1] * 10)
event_process = mp.Process(target=touchpad_evdev, args=(pos, DEVICE))
event_process.start()


############################
####### PYGame Setup #######
############################
pygame.init()
pygame.display.set_caption("TouchMe")
game_clock = pygame.time.Clock()
base_surface = pygame.display.set_mode(WINDOW)


class Square(pygame.sprite.Sprite):
    SQUARE_DIM = (10, 10)
    OFFSET = SQUARE_DIM[0] // 2, SQUARE_DIM[1] // 2

    def __init__(self) -> None:
        super(Square, self).__init__()
        self.surf = pygame.Surface(self.SQUARE_DIM)
        self.surf.fill((255, 255, 255))
        self.rect = self.surf.get_rect()


def is_quit_event(events):
    for e in events:
        if e.type == pygame.KEYDOWN and (e.key in (pygame.K_ESCAPE, pygame.K_q)):
            return True

        if e.type == pygame.QUIT:
            return True

    return False


pointers = [Square(), Square(), Square(), Square(), Square()]

pygame.mouse.set_visible(False)
while True:
    if is_quit_event(pygame.event.get()):
        break

    base_surface.fill((0, 0, 0))
    # print(pos[:])
    for i, pointer in enumerate(pointers):
        p = (pos[i * 2] // SCALE, pos[i * 2 + 1] // SCALE)
        if p == (-1, -1):
            continue
        pointer.rect.update((p[0] - 5, p[1] - 5), pointer.rect.size)
        base_surface.blit(pointer.surf, pointer.rect)

    pygame.display.update()
    game_clock.tick(FPS)

pygame.mouse.set_visible(True)
pygame.quit()
event_process.terminate()
